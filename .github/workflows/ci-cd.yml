name: CI

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

env:
    CF_API_TOKEN: ${{ secrets.CF_API }}
    CF_ORG: ${{ secrets.CF_ORG }}
    CF_SPACE: ${{ secrets.CF_SPACE }}
    CF_USER: ${{ secrets.CF_USER }}
    CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
    APP_NAME: cap-sample


jobs:
    ci:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                node-version: '22'
                cache: 'npm'
                cache-dependency-path: 'app/package-lock.json'

            - name: Install Dependencies
              working-directory: app
              run: npm ci

            - name: Lint & Unit Test (if present)
              working-directory: app
              run: |
                npm run lint --if-present
                npm test --if-present

            - name: Build (if CAP or build script present)
              working-directory: app
              run: npm run build --if-present

            - name: Package Artifact
              run: |
               zip -r artifact.zip app manifest.yml || true

            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                name: cap-sample-artifact
                path: artifact.zip
    
    cd:
        runs-on: ubuntu-latest
        needs: ci
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Try downloading CI artifact
              id: download
              continue-on-error: true
              uses: actions/download-artifact@v4
              with:
                name: cap-sample-artifact
                path: .

            - name: Unzip artifact if downloaded
              if: steps.download.outcome == 'success'
              run: unzip -o artifact.zip

            - name: Install Cloud Foundry CLI
              run: |
                curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v8" -o cf.tgz
                tar -xzf cf.tgz
                sudo mv cf8 /usr/local/bin/cf
                cf version

            - name: CF Login (target org/space)
              run: |
                cf login -a ${{ secrets.CF_API }} -u ${{ secrets.CF_USER }} -p ${{ secrets.CF_PASSWORD }} -o ${{ secrets.CF_ORG }} -s ${{ secrets.CF_SPACE }}

            - name: Deploy to Cloud Foundry
              run: cf push -f manifest.yml

            - name: Show app and routes
              id: show_app_routes
              run: |
                cf apps
                APP_URL=$(cf app ${{ env.APP_NAME }} | grep 'routes:' | awk '{print $2}')
                echo "app_url=$APP_URL" >> $GITHUB_OUTPUT

            - name: Notify Teams on Job Status
              if: always()
              uses: fjogeleit/http-request-action@v1
              with:
                url: ${{ secrets.TEAMS_WEBHOOK_URL }}
                method: 'POST'
                data: |
                  {
                    "type": "message",
                    "attachments": [
                      {
                        "contentType": "application/vnd.microsoft.card.adaptive",
                        "content": {
                          "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                          "type": "AdaptiveCard",
                          "version": "1.4",
                          "body": [
                            {
                              "type": "TextBlock",
                              "size": "Large",
                              "weight": "Bolder",
                              "text": "SAP Cloud Foundry Deployment for ${{ env.APP_NAME }}"
                            },
                            {
                              "type": "TextBlock",
                              "text": "Deployment status - ${{job.status}}!"
                            },
                            {
                              "type": "TextBlock",
                              "text": "App URL: [Open App](https://${{ steps.show_app_routes.outputs.app_url }})",
                              "wrap": true
                            },
                            {
                              "type": "TextBlock",
                              "text": "Workflow: [Open Workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                              "wrap": true
                            }
                          ]
                        }
                      }
                    ]
                  }
           